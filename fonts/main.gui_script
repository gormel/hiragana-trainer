local ui = require "ui"
local hiragana = require "hiragana"

local SCHEMA = {
	TEXT_EN = "en_text",
	TEXT_JP = "jp_text",

	BTN_EN_JP = "en_jp_btn",
	BTN_JP_EN = "jp_en_btn",
	BTN_STEP = "next_btn",
}

local DIRECTION_JP_EN = {
	from = "jp",
	to = "en",
	on = SCHEMA.BTN_EN_JP,
	off = SCHEMA.BTN_JP_EN,
	text_from = SCHEMA.TEXT_JP,
	text_to = SCHEMA.TEXT_EN,
}

local DIRECTION_EN_JP = {
	from = "en",
	to = "jp",
	on = SCHEMA.BTN_JP_EN,
	off = SCHEMA.BTN_EN_JP,
	text_from = SCHEMA.TEXT_EN,
	text_to = SCHEMA.TEXT_JP,
}

local function set_from(self)
	self.state_step = "FROM"
	self.state_idx = math.random(#hiragana)

	local text_node = gui.get_node(self.train_direction.text_from)
	local off_text = gui.get_node(self.train_direction.text_to)

	gui.set_enabled(text_node, true)
	gui.set_enabled(off_text, false)
	gui.set_text(text_node, hiragana[self.state_idx][self.train_direction.from])
end

local function set_to(self)
	self.state_step = "TO"

	local text_node = gui.get_node(self.train_direction.text_to)
	local off_text = gui.get_node(self.train_direction.text_from)

	gui.set_enabled(text_node, true)
	gui.set_enabled(off_text, false)
	gui.set_text(text_node, hiragana[self.state_idx][self.train_direction.to])
end

local function do_step(self)
	if self.state_step == nil or self.state_step == "TO" then
		set_from(self)
		return
	elseif self.state_step == "FROM" then
		set_to(self)
	end
end

local function set_direction(self, direction)
	self.train_direction = direction

	local on_node = gui.get_node(direction.on)
	local off_node = gui.get_node(direction.off)

	gui.set_enabled(on_node, true)
	gui.set_enabled(off_node, false)

	self.state_step = nil
	do_step(self)
end

function init(self)
	msg.post(".", "acquire_input_focus")
	
	math.randomseed(socket.gettime())
	set_direction(self, DIRECTION_EN_JP)
	
	local jp_en_btn = gui.get_node(SCHEMA.BTN_JP_EN)
	local en_jp_btn = gui.get_node(SCHEMA.BTN_EN_JP)
	local step_btn = gui.get_node(SCHEMA.BTN_STEP)
	
	ui.add_button(jp_en_btn, function()
		set_direction(self, DIRECTION_JP_EN)
	end)
	ui.add_button(en_jp_btn, function()
		set_direction(self, DIRECTION_EN_JP)
	end)
	ui.add_button(step_btn, function()
		do_step(self)
	end)
end

function final(self)
	ui.final()
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
	ui.on_input(action_id, action)
end